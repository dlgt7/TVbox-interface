1. XBPQ 是什么
①、属于 TVBox 家族里的「csp_XBPQ」引擎，纯字符串规则写法，无需 Python/JS 基础。
②、同一条规则既能让点播 App（TVBox、影视仓、Pluto）直接刮削网页，也能让直播源自动分组、嗅探。
③、与 drpy、py 相比：学习成本最低，调试最快；与 JSON 直连相比：可逆向无接口站点。
2. 核心语法一张图
① 截取        ：  起点&&终点  
② 二次截取    ：  起点&&终点||新起点&&新终点  
③ 拼接        ：  '+'  前后可混写字符串 / 变量  
④ 分类指定    ：  默认–a&&b||电影–c&&d||电视剧–e&&f  
⑤ JSON        ：  data.list[1].name   下标从 1 开始  
⑥ 转义        ：  保留字 $ # & * [ ] 前加 \\
⑦ 变量        ：  {cateId} {catePg} {area} {year} {class} {by} {act} {wd}  
⑧ 筛选        ：  类型$类型值#剧情$剧情值 …  
⑨ 嗅探词      ：  多个用 # 分隔，如 m3u8#mp4#flv  
⑩ 链接前缀/后缀： 自动补全相对路径
3. 字段清单（ext 内全部）
   | 字段            | 说明       | 示例                                                                         |   |                   |
| ------------- | -------- | -------------------------------------------------------------------------- | - | ----------------- |
| 主页url         | 入口       | `https://www.xxx.com`                                                      |   |                   |
| 分类url         | 列表页      | `https://www.xxx.com/vodshow/{cateId}--{area}------{catePg}---{year}.html` |   |                   |
| 分类            | 自建频道     | `电影$1#电视剧$2#综艺$3#动漫$4`                                                     |   |                   |
| 筛选            | 可留空，自动识别 | `外部json 或 直接写{}`                                                           |   |                   |
| 数组            | 列表循环体    | `<div class="stui-vodlist__box">&&</div>`                                  |   |                   |
| 标题            | 片名       | `title="&&"`                                                               |   |                   |
| 图片            | 封面       | `data-original="&&"`                                                       |   |                   |
| 链接            | 详情页      | `href="&&"`                                                                |   |                   |
| 副标题           | 更新集数     | `<span class="pic-text text-right">&&</span>`                              |   |                   |
| 嗅探词           | 正片格式     | `m3u8#mp4#flv#akamaized.net`                                               |   |                   |
| 播放数组          | 播放线路块    | `class="stui-content__playlist clearfix">&&</ul>`                          |   |                   |
| 播放列表          | 单集       | `<a&&/a>`                                                                  |   |                   |
| 播放标题          | 线路名      | `h3&&/h3`                                                                  |   |                   |
| 播放链接          | 真实地址     | `href="&&"`                                                                |   |                   |
| 直接播放          | 直播开关     | `1` 开启，`0` 关闭                                                              |   |                   |
| 链接前缀/后缀       | 补全       | `http://cdn.xxx.com` / `.m3u8`                                             |   |                   |
| 搜索url         | 搜索入口     | `https://www.xxx.com/search.php?wd={wd}`                                   |   |                   |
| 搜索数组/标题/图片/链接 | 同上逻辑     | …                                                                          |   |                   |
| 二次截取          | 不同页面不同规则 | \`电影–<ul>&&</ul>                                                           |   | 电视剧–<ol>&&</ol>\` |
4. 极速模板（直接改 3 处即可上线）
{
  "key": "极速演示",
  "name": "极速┃BPQ",
  "type": 3,
  "api": "csp_XBPQ",
  "searchable": 1,
  "quickSearch": 1,
  "filterable": 1,
  "ext": {
    "主页url": "https://www.你的目标站.com",
    "分类url": "https://www.你的目标站.com/vodshow/{cateId}--------{catePg}---.html",
    "分类": "电影$1#电视剧$2#综艺$3#动漫$4",
    "数组": "<div class=\"stui-vodlist__box\">&&</div>",
    "标题": "title=\"&&\"",
    "图片": "data-original=\"&&\"",
    "链接": "href=\"&&\"",
    "副标题": "<span class=\"pic-text text-right\">&&</span>",
    "播放数组": "class=\"stui-content__playlist clearfix\">&&</ul>",
    "播放列表": "<a&&/a>",
    "播放链接": "href=\"&&\"",
    "嗅探词": "m3u8#mp4#flv"
  }
}

分类url 就是：
“告诉 TVBox，点左边哪个频道，就去加载哪一页列表”的那串网址模板。
写法只有 3 步 5 个符号，真的傻子也能会。
一、先背模板（一共 5 个符号）
https://域名/目录/{cateId}--------{catePg}---.html
符号解释（按出现顺序）：
| 符号         | 叫法  | 作用                          |
| ---------- | --- | --------------------------- |
| `{}`       | 大括号 | **占位符**，TVBox 会自动把里面文字换成真实值 |
| `cateId`   | 频道号 | 对应你写的“分类”里 `$` 后面的数字        |
| `catePg`   | 页码号 | 翻页时 TVBox 自动 +1             |
| `-` 或 `--` | 分隔线 | 照抄网站格式，几个横线就写几个             |
| `.html`    | 后缀  | 网站是啥就写啥，也有 `.asp` 或 `/`     |
二、3 步填空白（拿真实站点练手）
1、打开网站列表页，随便点“电影”→ 第 2 页，地址栏得到：
https://www.80kv.com/vodshow/1--------2---.html
2、把会变动的数字换成占位符：
原：/vodshow/1--------2---.html
模板：/vodshow/{cateId}--------{catePg}---.html
类型{cateid}，剧情{calss}，地区{area}，年份{year}，排序{by}，{letter}字母，语言{lang}，翻页{catepg}
3、把域名补全，放进规则：
"分类url": "https://www.80kv.com/vodshow/{cateId}--------{catePg}---.html"
三、对应“分类”写法（必须配对）
"分类": "电影$1#电视剧$2#综艺$3#动漫$4"
用英文 # 分隔，千万别用中文“＃”，写死法（基础）

一、先搞懂“数组”到底截什么
1、打开列表页源码，找到“每一部影片”的最外层盒子。
   目标：让 XBPQ 知道“从哪开始循环”。
<div class="stui-vodlist__box">
    <a class="stui-vodlist__thumb" href="/v/123.html" title="长风渡" data-original="/upload/pic.jpg">
        <span class="pic-text text-right">更新至20集</span>
    </a>
</div>

<div class="stui-vodlist__box">
    <a class="stui-vodlist__thumb" href="/v/124.html" title="玉骨遥" data-original="/upload/pic2.jpg">
        <span class="pic-text text-right">更新至36集</span>
    </a>
</div>
2、写“数组”字段
原则：把“循环头”和“循环尾”分别粘进去，中间内容任意，XBPQ 会自动把两段之间的所有片段当成一条记录。
"数组": "<div class=\"stui-vodlist__box\">&&</div>"
二、再截“播放数据”——两大步
播放数据 = 播放数组（线路块） + 播放列表（单集） + 播放链接（真实地址）
下面用“详情页”真实源码演示：
<!-- 线路块 1 -->
<h3>线路①</h3>
<ul class="stui-content__playlist clearfix">
    <li><a href="/play/123-1-1.html">第01集</a></li>
    <li><a href="/play/123-1-2.html">第02集</a></li>
</ul>

<!-- 线路块 2 -->
<h3>线路②</h3>
<ul class="stui-content__playlist clearfix">
    <li><a href="/play/123-2-1.html">第01集</a></li>
    <li><a href="/play/123-2-2.html">第02集</a></li>
</ul>
1、先框住“线路块”——播放数组
特征：每个线路最外层相同的 <ul> 尾巴。
"播放数组": "class=\"stui-content__playlist clearfix\">&&</ul>"
2、再框住“单集”——播放列表
特征：每集都是 <a>集名</a>，用 <a&&/a> 最稳。
"播放列表": "<a&&/a>"
3、最后拿“真实地址”——播放链接
特征：href="地址"，把引号里的内容截出来。
"播放链接": "href=\"&&\""
4、（如果地址是相对路径，别忘了加前缀）
"链接前缀": "https://www.demo.com"
记住口诀：
“先圈大盒子(数组)，再圈小盒子(播放数组)，最后拿链接(播放链接)”




